<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

use DB;
use Storage;
use Redirect;
use Validator;
use Mail;
use File;
use Hash;
use Auth;
use DateTime;
use Cookie;



class WizardController extends Controller
{

    public function __construct()
    {
        $this->middleware('auth');
    }

    public function categorylist()
    {
        return view('wizard.category_list');
    }

    public function categoryaddedit(Request $request)
    {
        $action = 'add';
        $categories = DB::table('wizard_categories')->where('is_deleted','0')->orderby('name','asc')->get()->toArray();
        //dd($categories);

        $arrRecords = [
            'action'=>'add',
            'categories'=>$categories,
        ];


        if(isset($request->category_id))
        {

            $action = 'edit';
            $arrDetails = DB::table('wizard_categories')->where(['id'=>$request->category_id,'is_deleted'=>'0'])->first();


            $arrRecords['action'] = 'edit';
            $arrRecords['categorydetails'] = $arrDetails;
        }

        return view('wizard.categoryaddedit', $arrRecords);
    }

    public function savecategory(Request $request)
    {
        if(isset($request->parent_category_id) && !empty($request->parent_category_id) && $request->action == 'edit'){
            $validator = Validator::make($request->all(), [
                'name' => 'required|max:50',
            ]);
        }
        else {
            $validator = Validator::make($request->all(), [
                'name' => 'required|max:50|unique:wizard_categories',
            ]);
        }

        if ($validator->fails()) {
            return Redirect::back()
                ->withInput()
                ->withErrors($validator);
        }


        if(isset($request->parent_category_id) && !empty($request->parent_category_id) && $request->action == 'edit') {
            $categorydetails = DB::table('wizard_categories')->select('*')->where('id', $request->parent_category_id)->first();

            $cat_data = [
                'name' => $request->name,
                'language_key' => strtolower(str_replace(" ", "_", $request->name)),
                'parent_id' => isset($request->parent_id) ? $request->parent_id : '',
                'updated_at' => date('Y-m-d H:i:s')
            ];

            //dd($cat_data);
            DB::table('wizard_categories')->where('id', $request->parent_category_id)->update($cat_data);


            /*update level*/
            $get_level = DB::table('wizard_categories')->select('level')->where('id', $request->parent_id)->get()->first();
            //dd($get_level);
            $level = 0;
            if($get_level == null)
            {
                $level = 1;
            }  else{
                $level = $get_level->level + 1;
            }

            $level_data = [
                'level' => $level
            ];

            DB::table('wizard_categories')->where('id', $request->parent_category_id )->update($level_data);



            /* Store the log details */
            $logs = 'Category Updated -> (ID:'.$request->parent_category_id.')';
            storelogs($request->user()->id,$logs);
            $msg = '<div class="alert alert-info"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>Category updated successfully!</div>';

            //update in language table
            $arrlanguages = getlanguages();
            $categorynamelang = strtolower(str_replace(" ", "_", $request->name));
            $name_key = 'keyword_'.$categorynamelang."_".$request->parent_category_id;

            foreach ($arrlanguages as $keylang => $valuelang)
            {

                $language_transalation = DB::table('language_transalation')
                    ->where(['language_key'=>$name_key,'code'=>$valuelang->code])
                    ->first();

                //dd($valuel);

                $arrlang=['language_label'=>$request->name,
                    'language_value' => $request->name,
                    'code' => $valuelang->code];


                if(count($language_transalation) > 0) {
                    DB::table('language_transalation')
                        ->where('language_key', $name_key)
                        ->where('code', $valuelang->code)
                        ->update($arrlang);
                    /*print_r($arrlang);
                    echo '<br>';*/

                }
                else {
                    $arrlang['language_key'] = $name_key;
                    DB::table('language_transalation')->insert($arrlang);
                }

            }


        }
        else{

            $cat_data = [
                'name' => $request->name,
                'language_key' => strtolower(str_replace(" ", "_", $request->name)),
                'parent_id' => isset($request->parent_id) ? $request->parent_id : '',
                'created_at' => date('Y-m-d H:i:s')
            ];

            $last_added_id = DB::table('wizard_categories')->insertGetId($cat_data);


            /*update level*/
            $get_level = DB::table('wizard_categories')->select('level')->where('id', $request->parent_id)->get()->first();
            $level = 0;
            if($get_level == null)
            {
                $level = 1;
            }  else{
                $level = $get_level->level + 1;
            }

            $level_data = [
                'level' => $level
            ];
            DB::table('wizard_categories')->where('id', $last_added_id)->update($level_data);


            /* Store the log details */
            $logs = 'Category Added -> (ID:'.$last_added_id.')';
            storelogs($request->user()->id,$logs);
            $msg = '<div class="alert alert-info"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>Category added successfully!</div>';

            //update in language table
            $arrlanguages = getlanguages();
            $categorynamelang = strtolower(str_replace(" ", "_", $request->name));
            $name_key = 'keyword_'.$categorynamelang."_".$last_added_id;
            foreach ($arrlanguages as $keylang => $valuelang) {
                    $language_transalation = DB::table('language_transalation')
                        ->where(['language_key'=>$name_key,'code'=>$valuelang->code])
                        ->first();
                    //dd($valuel);
                    $arrlang=['language_label'=>$request->name,
                        'language_value' => $request->name,
                        'code' => $valuelang->code];
                    if(count($language_transalation) > 0) {
                        DB::table('language_transalation')
                            ->where('language_key', $name_key)
                            ->where('code', $valuelang->code)
                            ->update($arrlang);
                        /*print_r($arrlang);
                        echo '<br>';*/
                    }
                    else {
                        $arrlang['language_key'] = $name_key;
                        DB::table('language_transalation')->insert($arrlang);
                    }

                }


        }

        return Redirect::back()->with('msg', $msg);

    }

    public function deletecategory(Request $request) {
        $countRec = DB::table('wizard_categories')->select('*')->where('id', $request->id)->count();
        //dd($countRec);
        if($countRec > 0){
            DB::table('wizard_categories')->where('id',$request->id)->update(array('is_deleted' =>'1'));
            return Redirect::back()->with('msg', '<div class="alert alert-danger"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>Category removed successfully</div>');
        }
        else {
            return Redirect::back()->with('msg', '<div class="alert alert-danger"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>Category not Exist!</div>');
        }
    }


    public function updatecategorystatus(Request $request)
    {
        $update = DB::table('wizard_categories')->where('id', $request->id)->update(array('is_active' => $request->status));
        return ($update) ? 'true' : 'false';
    }

    public function getjsoncategoryproperty(Request $request) {
        $categoryDetails = array();
        $category = DB::table('wizard_categories')->select('*')->where('id', '!=', 0)->where('is_deleted', '=', 0)->get();
        foreach($category as $data) {
            $checked = ($data->is_active==0) ? 'checked' : '';
            $data->status = '<div class="switch"><input name="status" class="currencytogal" onchange="updateCategoryStatus('.$data->id.')" id="activestatus_'.$data->id.'" '.$checked.' value="1"  type="checkbox"><label for="activestatus_'.$data->id.'"></label></div>';
            $get = DB::table('wizard_categories')->select('*')
                ->where(['id'=>$data->parent_id,'is_deleted'=>0])
                ->first();
            $data->parent_id = isset($get->name) ? $data->parent_id." | ".$get->name   : '-';
            $data->preference = '0';
            $data->commissions = '0';
            /*if($data->icon != ""){
                $data->icon = '<img src="'.url('storage/app/images/languageicon').'/'.$data->icon.'" height="100px" width="100px">';
            }*/
            $categoryDetails[] = $data;
        }
        return json_encode($categoryDetails);
    }


    /*
     *  Options Section
    */
    public function optionslist($category_id = '') {
        $categoryitem = DB::table('wizard_categories')->select('*')
            ->where('id',$category_id)            
            ->where('is_deleted', '=', 0)->first();

        return view('wizard.options_list', ['category'=>$categoryitem]);
    }

    public function getjsonoptions(Request $request) {
        $optionsDetails = array();
        $options =  array();
        if(isset($request->category_id)) {
            $options = DB::table('wizard_options')->select('*')->where('id','!=','0')->where('category_id', '=', $request->category_id)->where('is_deleted', '=', 0)->get();
        }        

        foreach($options as $data) {
            //pre($data);
            $checked = ($data->is_active==0) ? 'checked' : '';
            $data->status = '<div class="switch"><input name="status" class="currencytogal" onchange="updateoptionsStatus('.$data->id.')" id="activestatus_'.$data->id.'" '.$checked.' value="1"  type="checkbox"><label for="activestatus_'.$data->id.'"></label></div>';
            $optionsDetails[] = $data;
        }
        return json_encode($optionsDetails);
    }



    public function optionsaddedit(Request $request)
    {
        $categories = DB::table('wizard_categories')->where(['is_deleted'=>'0','id'=>$request->category_id])->orderby('name','asc')->first();
        
        $action='add';
        $optionType = array();
        if(isset($request->id)) {
            $option = DB::table('wizard_options')->where(['id'=>$request->id,'is_deleted'=>'0'])->first();            
            if(isset($option->id)) {
                $optionType = DB::table('wizard_options_type')->where(['option_id'=>$option->id,'is_deleted'=>'0'])->get();            
            }                        
            $arrRecords['optionsdetails'] = $option;
            $action = 'edit';
        }
        
        $arrRecords['optionstype'] = $optionType;            
        $arrRecords['categories'] =$categories;
        $arrRecords['action'] = $action;        
        return view('wizard.optionsaddedit', $arrRecords);
    }

    public function saveoptions(Request $request)
    {
        $name = $request->options;

        $wizardoptions['user_id'] = $request->user()->id;
        $wizardoptions['category_id'] = $request->category_id;
        $wizardoptions['title'] = $name;
        //$name_key = str_replace(" ", "_", $name); 
        $name_key = str_replace(" ","_",strtolower($name));

        $wizardoptions['language_key'] = 'keyword_'.$name_key;
        $wizardoptionid = DB::table('wizard_options')->insertGetId($wizardoptions);

        $totalTypecount = $request->count_field_type;
        foreach($request->field_type as $keytype => $valtype) {            
            $wizardoptionstyp['option_id'] = $wizardoptionid;
            $wizardoptionstyp['type'] = $valtype;
            $optionstypeid = DB::table('wizard_options_type')->insertGetId($wizardoptionstyp);
            
            /* Radio Options & Value Store*/
            if(isset($request->radio[$keytype])){
                $arrraadio = $request->radio[$keytype];
                foreach ($arrraadio as $key => $value) {
                    $radioname = $value;
                    /*$title_key = str_replace(" ", "_", $value);*/
                    $title_key = str_replace(" ","_",strtolower($value));
                    $radiovalue = isset($request->radio_value[$keytype][$key]) ? $request->radio_value[$keytype][$key] : "";                
                    $wizardoptionstype['option_id'] = $wizardoptionid;
                    $wizardoptionstype['option_type_id'] = $optionstypeid;
                    $wizardoptionstype['title'] = $value;
                    $wizardoptionstype['value'] = $radiovalue;
                    $wizardoptionstype['language_key'] = 'keyword_'.$title_key;
                    DB::table('wizard_options_value')->insert($wizardoptionstype);                    
                }            
            }
            /* Select Options & Value Store*/
            if(isset($request->select[$keytype])) {
                $arrSelect = $request->select[$keytype];
                foreach ($arrSelect as $key => $value) {                    
                    $selectvalue = isset($request->select_value[$keytype][$key]) ? $request->select_value[$keytype][$key] : "";                
                    /*$title_key = str_replace(" ", "_", $value);*/  
                    $title_key = str_replace(" ","_",strtolower($value)); 
                    $wizardoptionstype['option_id'] = $wizardoptionid;
                    $wizardoptionstype['option_type_id'] = $optionstypeid;
                    $wizardoptionstype['title'] = $value;
                    $wizardoptionstype['value'] = $selectvalue;
                    $wizardoptionstype['language_key'] = 'keyword_'.$title_key;
                    DB::table('wizard_options_value')->insert($wizardoptionstype);                    
                }            
            } 
             /* Checkbox Options & Value Store*/
            if(isset($request->checkbox[$keytype])) {
                $arrCheckbox = $request->checkbox[$keytype];
                foreach ($arrCheckbox as $key => $value) {                    
                    $checkboxvalue = isset($request->checkbox_value[$keytype][$key]) ? $request->checkbox_value[$keytype][$key] : "";                
                    /*$title_key = str_replace(" ", "_", $value); */
                    $title_key = str_replace(" ","_",strtolower($value));
                    $wizardoptionstype['option_id'] = $wizardoptionid;
                    $wizardoptionstype['option_type_id'] = $optionstypeid;
                    $wizardoptionstype['title'] = $value;
                    $wizardoptionstype['value'] = $checkboxvalue;
                    $wizardoptionstype['language_key'] = 'keyword_'.$title_key;
                    DB::table('wizard_options_value')->insert($wizardoptionstype);                    
                }            
            }                
        }
        $msg = '<div class="alert alert-info"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>Hotel Basic info added successfully!</div>';
        return Redirect::back()->with('msg', $msg);

    }

    public function saveoptionsbackup(Request $request)
    {
        dd($request->all());

        if(isset($request->parent_options_id) && !empty($request->parent_options_id) && $request->action == 'edit') {
            $optionsdetails = DB::table('wizard_categories')->select('*')->where('id', $request->parent_options_id)->first();

            $cat_data = [
                'name' => $request->name,
                'language_key' => strtolower(str_replace(" ", "_", $request->name)),
                'parent_id' => isset($request->parent_id) ? $request->parent_id : '',
                'updated_at' => date('Y-m-d H:i:s')
            ];

            //dd($cat_data);
            DB::table('wizard_categories')->where('id', $request->parent_options_id)->update($cat_data);


            /*update level*/
            $get_level = DB::table('wizard_categories')->select('level')->where('id', $request->parent_id)->get()->first();
            //dd($get_level);
            $level = 0;
            if($get_level == null)
            {
                $level = 1;
            }  else{
                $level = $get_level->level + 1;
            }

            $level_data = [
                'level' => $level
            ];

            DB::table('wizard_categories')->where('id', $request->parent_options_id )->update($level_data);



            /* Store the log details */
            $logs = 'options Updated -> (ID:'.$request->parent_options_id.')';
            storelogs($request->user()->id,$logs);
            $msg = '<div class="alert alert-info"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>options updated successfully!</div>';

            //update in language table
            $arrlanguages = getlanguages();
            $optionsnamelang = strtolower(str_replace(" ", "_", $request->name));
            $name_key = 'keyword_'.$optionsnamelang."_".$request->parent_options_id;

            foreach ($arrlanguages as $keylang => $valuelang)
            {

                $language_transalation = DB::table('language_transalation')
                    ->where(['language_key'=>$name_key,'code'=>$valuelang->code])
                    ->first();

                //dd($valuel);

                $arrlang=['language_label'=>$request->name,
                    'language_value' => $request->name,
                    'code' => $valuelang->code];


                if(count($language_transalation) > 0) {
                    DB::table('language_transalation')
                        ->where('language_key', $name_key)
                        ->where('code', $valuelang->code)
                        ->update($arrlang);
                    /*print_r($arrlang);
                    echo '<br>';*/

                }
                else {
                    $arrlang['language_key'] = $name_key;
                    DB::table('language_transalation')->insert($arrlang);
                }

            }


        }
        else{

            $cat_data = [
                'name' => $request->name,
                'language_key' => strtolower(str_replace(" ", "_", $request->name)),
                'parent_id' => isset($request->parent_id) ? $request->parent_id : '',
                'created_at' => date('Y-m-d H:i:s')
            ];

            $last_added_id = DB::table('wizard_categories')->insertGetId($cat_data);


            /*update level*/
            $get_level = DB::table('wizard_categories')->select('level')->where('id', $request->parent_id)->get()->first();
            $level = 0;
            if($get_level == null)
            {
                $level = 1;
            }  else{
                $level = $get_level->level + 1;
            }

            $level_data = [
                'level' => $level
            ];
            DB::table('wizard_categories')->where('id', $last_added_id)->update($level_data);


            /* Store the log details */
            $logs = 'options Added -> (ID:'.$last_added_id.')';
            storelogs($request->user()->id,$logs);
            $msg = '<div class="alert alert-info"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>options added successfully!</div>';

            //update in language table
            $arrlanguages = getlanguages();
            $optionsnamelang = strtolower(str_replace(" ", "_", $request->name));
            $name_key = 'keyword_'.$optionsnamelang."_".$last_added_id;


            foreach ($arrlanguages as $keylang => $valuelang)
            {

                $language_transalation = DB::table('language_transalation')
                    ->where(['language_key'=>$name_key,'code'=>$valuelang->code])
                    ->first();

                //dd($valuel);

                $arrlang=['language_label'=>$request->name,
                    'language_value' => $request->name,
                    'code' => $valuelang->code];


                if(count($language_transalation) > 0) {
                    DB::table('language_transalation')
                        ->where('language_key', $name_key)
                        ->where('code', $valuelang->code)
                        ->update($arrlang);
                    /*print_r($arrlang);
                    echo '<br>';*/

                }
                else {
                    $arrlang['language_key'] = $name_key;
                    DB::table('language_transalation')->insert($arrlang);
                }

            }


        }

        return Redirect::back()->with('msg', $msg);

    }

    public function deleteoptions(Request $request) {
        $countRec = DB::table('wizard_categories')->select('*')->where('id', $request->id)->count();
    //dd($countRec);
        if($countRec > 0){
            DB::table('wizard_categories')->where('id',$request->id)->update(array('is_deleted' =>'1'));
            return Redirect::back()->with('msg', '<div class="alert alert-danger"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>options removed successfully</div>');
        }
        else {
            return Redirect::back()->with('msg', '<div class="alert alert-danger"><a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>options not Exist!</div>');
        }
    }


    public function updateoptionsstatus(Request $request)
    {
        $update = DB::table('wizard_options')->where('id', $request->id)->update(array('is_active' => $request->status));
        return ($update) ? 'true' : 'false';
    }

  










}
